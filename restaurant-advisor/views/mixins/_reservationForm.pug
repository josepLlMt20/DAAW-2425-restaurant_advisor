mixin reservationForm(store)
  form(action=`/store/${store._id}/reservation` method="POST")
    .mb-3
      label(for="date" class="form-label") Select a date
      input.form-control(type="date" id="date" name="date" required 
        data-timeslots=JSON.stringify(store.timeSlots || []) 
        data-closedDays=JSON.stringify(store.closedDays || [])
      )

    .mb-3
      label(for="timeSlot" class="form-label") Select a time slot
      select.form-control(id="timeSlot" name="timeSlot" required disabled)
        option(value="" disabled selected) Choose a time slot

    button.btn.btn-primary(type="submit") Reserve

  script.
    const form = document.querySelector('form');
    const timeSlots = JSON.parse(form.querySelector('input[name="date"]').getAttribute('data-timeslots'));
    const closedDays = JSON.parse(form.querySelector('input[name="date"]').getAttribute('data-closedDays'));
    const timeSlotSelect = document.getElementById('timeSlot');
    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    const availableSlots = [];
    
    document.addEventListener('DOMContentLoaded', function() {
      console.log('timeSlots:', timeSlots);
      console.log('closedDays:', closedDays);
    });

    document.getElementById('date').addEventListener('change', function() {
        const selectedDate = this.value; 
        timeSlotSelect.innerHTML = '<option value="" disabled selected>Choose a time slot</option>';

        const selectedDateObj = new Date(selectedDate);
        const selectedDay = days[selectedDateObj.getDay()];

        console.log("Fecha seleccionada:", selectedDate);
        console.log("Día de la semana seleccionado:", selectedDay);

        if (selectedDate && !closedDays.includes(selectedDay)) {
          availableSlots.length = 0; // Limpiar los slots disponibles para la nueva fecha
          
          // Bucle para filtrar los slots disponibles según el día seleccionado
          timeSlots.forEach(function(slot) {
            console.log("Slot:", slot.dayOfWeek);
            if (slot.dayOfWeek === selectedDay) {
              availableSlots.push(slot);
            }
          });  

          console.log("Time slots disponibles:", availableSlots);

          if (availableSlots.length > 0) {
              timeSlotSelect.disabled = false;

              availableSlots.forEach(function(slot) {
                  // Convertir `selectedDate` a formato ISO (solo la parte de la fecha)
                  const selectedDateISO = new Date(selectedDate).toISOString().split('T')[0];

                  // Buscar la reserva existente para este `timeSlot` y fecha seleccionada
                  const existingReservation = slot.reservations.find(res => {
                      const reservationDateISO = new Date(res.date).toISOString().split('T')[0];
                      return reservationDateISO === selectedDateISO;
                  });

                  // Calcular el número de reservas existentes para este `timeSlot`
                  const reserved = existingReservation ? existingReservation.currentReservations : 0;
                  const available = slot.maxReservations - reserved; // Calcular las reservas disponibles

                  // Crear la opción para el selector
                  const option = document.createElement('option');
                  option.value = `${slot.startTime}-${slot.endTime}`;
                  option.textContent = `${slot.startTime} - ${slot.endTime} (${available} available)`;

                  // Agregar solo si hay disponibilidad en el intervalo de tiempo
                  if (available > 0) {
                      timeSlotSelect.appendChild(option);
                  }
              });
          } else {
            timeSlotSelect.disabled = true;
          }
        } else {
          timeSlotSelect.disabled = true;
        }
      });
